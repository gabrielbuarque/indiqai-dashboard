name: Add Dockerfile if missing

on:
  push:
    branches:
      - flutterflow

jobs:
  add-dockerfile:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Check if Dockerfile exists
        id: check_file
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile not found!"
            echo "need_dockerfile=true" >> $GITHUB_ENV
          else
            echo "Dockerfile exists."
          fi

      - name: Add Dockerfile
        if: env.need_dockerfile == 'true'
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          cat <<EOF > Dockerfile
          # Etapa de construção usando a imagem Flutter mais recente
          FROM ghcr.io/cirruslabs/flutter:latest AS build

          # Definir o diretório de trabalho
          WORKDIR /app

          # Copiar os arquivos do projeto para o contêiner
          COPY . .

          # Habilitar o suporte à web e instalar dependências
          RUN flutter config --enable-web && \
              flutter pub get && \
              flutter build web

          # Etapa de produção
          FROM nginx:alpine

          # Remover arquivos padrão do Nginx
          RUN rm -rf /usr/share/nginx/html/*

          # Copiar o build do Flutter para o diretório de serviço do Nginx
          COPY --from=build /app/build/web /usr/share/nginx/html

          # Expor a porta 8095 para o Nginx
          EXPOSE 8095

          # Comando para iniciar o Nginx
          CMD ["nginx", "-g", "daemon off;"]
          EOF
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git remote set-url origin https://x-access-token:${{ secrets.ACTIONS_PAT }}@github.com/gabrielbuarque/indiqai-dashboard.git
          git add Dockerfile
          git commit -m "Add Dockerfile"
          git push origin flutterflow
